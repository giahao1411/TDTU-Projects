public void processTransactionWithDiscount(String path) {
    try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] payData = line.split(",");
            double amount = Double.parseDouble(payData[1]);
            String paymentPurpose = payData[2];
            String accountType = payData[3];
            int accountID = Integer.parseInt(payData[4]);

            for (Payment payment : paymentObjects) {
                if (payment instanceof EWallet && accountType.equals("EW") && amount > 500
                        && paymentPurpose.equals("Clothing")) {
                    for (IDCard idCard : idcm.getIDCards()) {
                        if (idCard.getPhoneNumber() == accountID &&
                                ((idCard.getSex().equals("Male")
                                        && IDCard.ageCalculator(idCard.getDateOfBirth()) < 18) ||
                                        (idCard.getSex().equals("Female")
                                                && IDCard.ageCalculator(idCard.getDateOfBirth()) < 20))) {
                            double disCount = amount * 0.15;
                            ((EWallet) payment).pay(amount - disCount);
                            break;
                        }
                    }
                    break;
                }

                if (accountType.equals("CC") && payment instanceof ConvenientCard &&
                        ((ConvenientCard) payment).getIDCard().getID() == accountID &&
                        ((ConvenientCard) payment).pay(amount)) {
                    break;
                }

                if (accountType.equals("BA") && payment instanceof BankAccount &&
                        ((BankAccount) payment).getAccountNumber() == accountID &&
                        ((BankAccount) payment).pay(amount)) {
                    break;
                }

                if (accountType.equals("EW") && payment instanceof EWallet &&
                        ((EWallet) payment).getPhoneNumber() == accountID &&
                        ((EWallet) payment).pay(amount)) {
                    break;
                }
            }
        }
    } catch (

    IOException e) {
        e.printStackTrace();
    }
}